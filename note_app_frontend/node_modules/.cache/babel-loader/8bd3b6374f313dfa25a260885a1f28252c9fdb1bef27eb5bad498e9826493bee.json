{"ast":null,"code":"var _jsxFileName = \"/Users/mtiatnuclieos/projects/assessments/dental_bee_assessment/note_app_frontend/src/components/Notes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../axiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const fetchNotes = async () => {\n    try {\n      const response = await axiosInstance.get('notes/');\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Failed to fetch notes\", error);\n    }\n  };\n  const createNote = async e => {\n    e.preventDefault();\n    try {\n      await axiosInstance.post('notes/', {\n        title,\n        description\n      });\n      fetchNotes();\n      setTitle('');\n      setDescription('');\n    } catch (error) {\n      console.error(\"Failed to create note\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Notes, \"VTWEnY4l7lBmn8iXwzO16n3v23g=\");\n_c = Notes;\nexport default Notes;\nvar _c;\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","Notes","_s","notes","setNotes","title","setTitle","description","setDescription","fetchNotes","response","get","data","error","console","createNote","e","preventDefault","post","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","map","note","id","_c","$RefreshReg$"],"sources":["/Users/mtiatnuclieos/projects/assessments/dental_bee_assessment/note_app_frontend/src/components/Notes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axiosInstance from '../axiosInstance';\n\nfunction Notes() {\n    const [notes, setNotes] = useState([]);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n\n    useEffect(() => {\n        fetchNotes();\n    }, []);\n\n    const fetchNotes = async () => {\n        try {\n            const response = await axiosInstance.get('notes/');\n            setNotes(response.data);\n        } catch (error) {\n            console.error(\"Failed to fetch notes\", error);\n        }\n    };\n\n    const createNote = async (e) => {\n        e.preventDefault();\n        try {\n            await axiosInstance.post('notes/', { title, description });\n            fetchNotes();\n            setTitle('');\n            setDescription('');\n        } catch (error) {\n            console.error(\"Failed to create note\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Notes</h2>\n            <form onSubmit={createNote}>\n                <input\n                    type=\"text\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                    placeholder=\"Title\"\n                />\n                <textarea\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    placeholder=\"Description\"\n                />\n                <button type=\"submit\">Add Note</button>\n            </form>\n            <ul>\n                {notes.map(note => (\n                    <li key={note.id}>\n                        <h3>{note.title}</h3>\n                        <p>{note.description}</p>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Notes;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}